// schema.prisma

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Bond {
  id                      String   @id @default(auto()) @map("_id") @db.ObjectId
  figi                    String?
  ticker                  String?
  classCode               String?
  isin                    String?
  lot                     Int?
  currency                String?

  klong                   Quotation?
  kshort                  Quotation?
  dlong                   Quotation?
  dshort                 Quotation?
  dlongMin               Quotation?
  dshortMin              Quotation?

  shortEnabledFlag        Boolean?
  name                    String?
  exchange                String?
  couponQuantityPerYear   Int?
  maturityDate            DateTime?
  nominal                 MoneyValue?
  initialNominal          MoneyValue?
  stateRegDate            DateTime?
  placementDate           DateTime?
  placementPrice          MoneyValue?
  aciValue                MoneyValue?

  countryOfRisk           String?
  countryOfRiskName       String?
  sector                  String?
  issueKind               String?
  issueSize               Int?
  issueSizePlan           Int?
  tradingStatus           Int? // Use enum if needed
  otcFlag                 Boolean?
  buyAvailableFlag        Boolean?
  sellAvailableFlag       Boolean?
  floatingCouponFlag      Boolean?
  perpetualFlag           Boolean?
  amortizationFlag        Boolean?

  minPriceIncrement       Quotation?
  apiTradeAvailableFlag   Boolean?
  uid                     String @unique
  realExchange            Int? // Use enum if needed
  positionUid             String?
  assetUid                String?

  forIisFlag              Boolean?
  forQualInvestorFlag     Boolean?
  weekendFlag             Boolean?
  blockedTcaFlag          Boolean?
  subordinatedFlag        Boolean?
  liquidityFlag           Boolean?

  first_1minCandleDate    DateTime?
  first_1dayCandleDate    DateTime?

  riskLevel               Int? // Use enum if needed
  brand                   BrandData?
  bondType                Int? // Use enum if needed
  callDate                DateTime?
  dlongClient             Quotation?
  dshortClient            Quotation?

  lastPrice               LastPrice?

  coupons                 Coupon[]

  yield                   Float?
}

type Quotation {
  units    Int?
  nano     Int?
}

type MoneyValue {
  currency String?
  units    Int?
  nano     Int?
}

type BrandData {
  name          String?
  description   String?
  info          String?
  company       String?
  logoName      String?
}

type LastPrice {
  figi           String?
  price          Quotation?
  time           DateTime?
  instrumentUid  String?
  lastPriceType  Int? // Or define as enum
}

type Coupon {
  figi             String?
  couponDate       DateTime?
  couponNumber     Int?
  fixDate          DateTime?
  payOneBond       MoneyValue?
  couponType       Int?
  couponStartDate  DateTime?
  couponEndDate    DateTime?
  couponPeriod     Int?
}

