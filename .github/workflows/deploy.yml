name: CI/CD â€“ Build & Deploy All

on:
  push:
    branches:
      - main
    paths:
      - 'apps/**'
      - 'packages/**'
      - 'docker-compose.yml'
      - '.github/workflows/deploy.yml'

env:
  REGISTRY: ghcr.io
  DEPLOY_DIR: ${{ secrets.DEPLOY_DIR }}

permissions:
  contents: read
  packages: write

jobs:
  build-and-push:
    name: Build & Push Images
    runs-on: ubuntu-latest

    strategy:
      matrix:
        service:
          - name: api
            dockerfile: Dockerfile.api
            image: finper-api
          - name: ui
            dockerfile: Dockerfile.ui
            image: finper-ui

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to GHCR
        run: echo "${{ secrets.GITHUB_TOKEN }}" \ | docker login ${{ env.REGISTRY }} -u "${{ github.repository_owner }}" --password-stdin

      - name: Build & Push ${{ matrix.service.name }}
        run: |
          docker build \
            -f ${{ matrix.service.dockerfile }} \
            -t ${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ matrix.service.image }}:latest .
          docker push ${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ matrix.service.image }}:latest

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Create .env file
        run: |
          cat << 'EOF' > .env
          DATABASE_URL=mongodb://${{ secrets.MONGO_APP_USER }}:${{ secrets.MONGO_APP_PASSWORD }}@mongodb:27017/${{ secrets.MONGO_DB }}?authSource=admin
          TELEGRAM_BOT_TOKEN=${{ secrets.TELEGRAM_BOT_TOKEN }}
          TINKOFF_TOKEN=${{ secrets.TINKOFF_TOKEN }}
          API_HOST=${{ secrets.API_HOST }}
          UI_HOST=${{ secrets.UI_HOST }}
          MONGO_DB=${{ secrets.MONGO_DB }}
          MONGO_APP_USER=${{ secrets.MONGO_APP_USER }}
          MONGO_APP_PASSWORD=${{ secrets.MONGO_APP_PASSWORD }}
          EOF

      - name: Crete mongo init script
        run: |
          cat << 'EOF' > mongo-init.js
          db.createUser({
            user:   "${{ secrets.MONGO_APP_USER }}",
            pwd:    "${{ secrets.MONGO_APP_PASSWORD }}",
            roles: [ { role: "readWrite", db: "${{ secrets.MONGO_DB }}" } ]
          });
          EOF

      - name: Set up SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

      - name: Deploy to server
        run: |
          scp -o StrictHostKeyChecking=no .env ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }}:${{secrets.DEPLOY_DIR}}
          scp -o StrictHostKeyChecking=no docker-compose.yml ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }}:${{secrets.DEPLOY_DIR}}
          scp -o StrictHostKeyChecking=no mongo-init.js ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }}:${{secrets.DEPLOY_DIR}}
          ssh -o StrictHostKeyChecking=no ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }} << 'EOF'
            set -e
            cd $DEPLOY_DIR

            docker compose pull
            docker compose up -d --build

            docker system prune -f
          EOF
