services:
  mongodb:
    image: mongo:6.0
    container_name: finper-mongodb
    restart: always
    command: ['mongod', '--replSet', 'rs0', '--bind_ip_all', '--auth', '--keyFile', '/etc/mongo-keyfile']
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_APP_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_APP_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGO_DB}
    volumes:
      - finper-mongo-data:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js
      - ./mongo-keyfile:/etc/mongo-keyfile:ro
    networks:
      - nginx-proxy
    healthcheck:
      test: >
        mongosh --username $MONGO_INITDB_ROOT_USERNAME --password $MONGO_INITDB_ROOT_PASSWORD \
          --eval "try { rs.status().ok } catch (e) { \
                rs.initiate({ _id: 'rs0', members: [{ _id: 0, host: 'localhost:27017' }] }).ok \
              }"


      interval: 10s
      start_period: 5s
      retries: 5

  api:
    image: ghcr.io/slavoyar/finper-api:latest
    container_name: finper-api
    expose:
      - '3000'
    env_file:
      - .env
    environment:
      - NODE_ENV=production
    depends_on:
      - mongodb
    networks:
      - nginx-proxy
    restart: always

  ui:
    image: ghcr.io/slavoyar/finper-ui:latest
    container_name: finper-ui
    expose:
      - '80'
    environment:
      - VIRTUAL_HOST=$UI_HOST
      - LETSENCRYPT_HOST=$UI_HOST
      - LETSENCRYPT_EMAIL=slavoyarmc@gmail.com
    networks:
      - nginx-proxy
    restart: always

volumes:
  finper-mongo-data:

networks:
  nginx-proxy:
    external: true
